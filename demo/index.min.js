import { css, LitElement, html } from 'lit';
import { ifDefined } from 'lit/directives/if-defined.js';
import { classMap } from 'lit/directives/class-map.js';
import logoOfficial from '@alaskaairux/icons/dist/restricted/AS-tagline-200.mjs';
import logoStandard from '@alaskaairux/icons/dist/restricted/AS-200.mjs';
import logoOneworld from '@alaskaairux/icons/dist/logos/oneworld.mjs';
import AuroLibraryRuntimeUtils from '@aurodesignsystem/auro-library/scripts/utils/runtimeUtils.mjs';

var styleCss = css`*,*:before,*:after{box-sizing:border-box}@media(prefers-reduced-motion: reduce){*,*:before,*:after{animation-duration:.01ms !important;animation-iteration-count:1 !important;transition-duration:.01ms !important}}*:focus-visible{outline:0}*:focus-visible{outline:0}:focus:not(:focus-visible){outline:3px solid transparent}.headerLinkBox{display:flex;text-decoration:none}.logoIcon{width:calc(var(--ds-size-800, 4rem)*2);padding-right:var(--ds-size-100, 0.5rem);border-right-width:1px;border-right-style:solid;margin-right:var(--ds-size-100, 0.5rem)}.oneworldLogo{display:flex;width:calc(var(--ds-size-500, 2.5rem) + .1rem);flex-direction:column;justify-content:center;padding-left:var(--ds-size-50, 0.25rem);margin-bottom:var(--ds-size-100, 0.5rem)}.headerTitle{display:flex;flex-direction:column;justify-content:center;padding-left:var(--ds-size-50, 0.25rem)}.headerTitle-title{padding-bottom:var(--ds-size-50, 0.25rem);font-size:var(--ds-size-400, 2rem);line-height:1}.headerTitle-tagline{padding-bottom:var(--ds-size-50, 0.25rem);line-height:1;text-transform:uppercase}`;

var colorCss = css`.headerLinkBox{color:var(--ds-auro-lockup-alaska-logo-color)}.logoIcon{border-right-color:var(--ds-auro-lockup-divider-color)}.headerTitle-title{color:var(--ds-auro-lockup-title-color)}.headerTitle-tagline{color:var(--ds-auro-lockup-subtitle-color)}:host([onDark]){--ds-auro-lockup-alaska-logo-color: var(--ds-color-icon-primary-inverse, #f7f7f7);--ds-auro-lockup-divider-color: var(--ds-color-border-divider-inverse, rgba(255, 255, 255, 0.25));--ds-auro-lockup-subtitle-color: var(--ds-color-text-tertiary-inverse, #adadad);--ds-auro-lockup-title-color: var(--ds-color-text-subtle-inverse, #56bbde)}`;

var tokensCss = css`:host{--ds-auro-lockup-alaska-logo-color: var(--ds-color-brand-lounge, #01426a);--ds-auro-lockup-divider-color: var(--ds-color-border-divider-default, rgba(0, 0, 0, 0.12));--ds-auro-lockup-subtitle-color: var(--ds-color-text-tertiary-default, #6a717c);--ds-auro-lockup-title-color: var(--ds-color-text-info-default, #326aa5)}`;

// Copyright (c) 2021 Alaska Airlines. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.


// See https://git.io/JJ6SJ for "How to document your components using JSDoc"
/**
 * The auro-lockup element is a standardized custom element for the use in headers of Alaska Airlines extended experiences.
 *
 * @attr {String} path - URL path for lockup link
 * @attr {Boolean} onDark - Toggle onDark UI
 * @slot title - Set title for lockup
 * @slot subtitle - Set sub-title for lockup
 * @attr {boolean} standard - uses the standard Alaska logo in place of the official logo, requires use of `oneWorld` attribute.
 * @attr {boolean} oneworld - replaces product name and tag line with Oneworld logo
 */

// build the component class
class AuroLockup extends LitElement {
  constructor() {
    super();

    this.path = '/';
    this.standard = false;
    this.oneworld = false;

    /**
     * @private
     */
    this.runtimeUtils = new AuroLibraryRuntimeUtils();
  }

  // function to define props used within the scope of this component
  static get properties() {
    return {
      // ...super.properties,
      path: {
        type: String
      },
      standard: {
        type: Boolean
      },
      oneworld: {
        type: Boolean
      }
    };
  }

  static get styles() {
    return [
      styleCss,
      colorCss,
      tokensCss
    ];
  }

  /**
   * This will register this element with the browser.
   * @param {string} [name="auro-lockup"] - The name of element that you want to register to.
   *
   * @example
   * AuroLockup.register("custom-lockup") // this will register this element to <custom-lockup/>
   *
   */
  static register(name = "auro-lockup") {
    AuroLibraryRuntimeUtils.prototype.registerComponent(name, AuroLockup);
  }

  firstUpdated() {
    // Add the tag name as an attribute if it is different than the component name
    this.runtimeUtils.handleComponentTagRename(this, 'auro-lockup');
  }

  /**
   * @private
   * @param {string} svgContent - The imported svg icon.
   * @returns {TemplateResult} - The html template for the icon.
   */
  generateIconHtml(svgContent) {
    const dom = new DOMParser().parseFromString(svgContent, 'text/html'),
      svg = dom.body.firstChild;

    return html`${svg}`;
  }

  // When using auroElement, use the following attribute and function when hiding content from screen readers.
  // aria-hidden="${this.hideAudible(this.hiddenAudible)}"

  // function that renders the HTML and CSS into  the scope of the component
  render() {
    const classes = {
      'logoIcon': true,
      'logoDivider': !this.oneworld
    };

    return html`
      <a href=${this.path} class="headerLinkBox">
        <div class="${classMap(classes)}">
          ${ifDefined(this.standard && this.oneworld
            ? this.generateIconHtml(logoStandard.svg)
            : this.generateIconHtml(logoOfficial.svg))
          }
        </div>
        ${ifDefined(this.oneworld ? html`
          <div class="oneworldLogo">
            ${this.generateIconHtml(logoOneworld.svg)}
          </div>
        ` : html`
          <div class="headerTitle">
            <span class="headerTitle-title">
              <slot name="title"></slot>
            </span>
            <span class="headerTitle-tagline">
              <slot name="subtitle"></slot>
            </span>
          </div>
        `)}
      </a>
    `;
  }
}

AuroLockup.register();
AuroLockup.register('custom-lockup');
